import streamlit as st
import pandas as pd

from pyecharts import options as opts

from pyecharts.charts import Graph, Line
from streamlit_echarts import st_pyecharts, st_echarts


from PIL import Image
image = Image.open('expoelectronica.png')

st.set_page_config(
    page_title="–≠–∫—Å–ø–µ—Ä—Ç–∏–∑–∞",
    page_icon="üì∫",
    initial_sidebar_state="expanded",
    menu_items={
        'Get Help': 'https://www.yandex.ru',
        'Report a bug': "https://www.yandex.ru",
        'About': "# –≠–∫—Å–ø–µ—Ä—Ç–∏–∑–∞ –ø—Ä–æ–µ–∫—Ç–æ–≤ –Ω–∞ –Ω–∞–ª–∏—á–∏–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–π –∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç–∞!"
    }
)
st.image(image, caption=None, use_column_width=None, clamp=False, channels="RGB", output_format="auto")



# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è st.session_state
if "current_question" not in st.session_state:
    st.session_state.current_question = 0


if "answers" not in st.session_state:
    st.session_state.answers = []



# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Å –≤–æ–ø—Ä–æ—Å–æ–º –∏ –≤–∞—Ä–∏–∞–Ω—Ç–∞–º–∏ –æ—Ç–≤–µ—Ç–∞
def display_question_page(question, options, slider_ranges):
    st.header(question)
    if "slider_value" not in st.session_state:
        st.session_state.slider_value = 20 # –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –Ω–∞—á–∞–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ —Å–ª–∞–π–¥–µ—Ä–∞
    selected_option = st.radio(label="", options=options, key="selected_option")
    slider_range = slider_ranges[options.index(selected_option)]
    inputuser = st.session_state.slider_value
    if slider_range[0] != slider_range[1]:
        st.session_state.slider_value = st.slider(label="–í—ã–±–µ—Ä–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –±–∞–ª–ª–æ–≤, –∫–æ—Ç–æ—Ä—ã–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –ø—Ä–æ–µ–∫—Ç", min_value=slider_range[0], max_value=slider_range[1], value=slider_range[0], step=1)
        inputuser = st.session_state.slider_value
    else:
        st.write("–î–ª—è —ç—Ç–æ–≥–æ –≤–∞—Ä–∏–∞–Ω—Ç–∞ –ø—Ä–∏—Å–≤–∞–∏–≤–∞–µ—Ç—Å—è –∑–Ω–∞—á–µ–Ω–∏–µ: " + str(slider_range[0]) + " –±–∞–ª–ª–æ–≤")
        inputuser = slider_range[0]

    # if selected_option:
    #     st.markdown(f"<span style='color:gray;'>–í—ã –≤—ã–±—Ä–∞–ª–∏: {selected_option}</span>", unsafe_allow_html=True)

    if st.button("–ü–µ—Ä–µ–π—Ç–∏ –∫ —Å–ª–µ–¥—É—é—â–µ–º—É –≤–æ–ø—Ä–æ—Å—É"):
        st.session_state.current_question += 1
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–π –æ—Ç–≤–µ—Ç –∏ –∑–Ω–∞—á–µ–Ω–∏–µ —Å–ª–∞–π–¥–µ—Ä–∞
        st.session_state.answers.append({
            "question_number": st.session_state.current_question,
            "selected_option": selected_option,
            "slider_value": inputuser
        })
        st.markdown("""
            <script>
                window.scrollTo(0, 0);
            </script>
        """, unsafe_allow_html=True)
        st.experimental_rerun()
# –°–ø–∏—Å–æ–∫ –≤–æ–ø—Ä–æ—Å–æ–≤ –∏ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ –æ—Ç–≤–µ—Ç–∞
questions = [
    {
        "question": "–°—Ç–µ–ø–µ–Ω—å –≤–∞–∂–Ω–æ—Å—Ç–∏, –æ–±–ª–∞—Å—Ç–∏ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è, –æ—Ü–µ–Ω–∫–∞ —ç—Ñ—Ñ–µ–∫—Ç–∞ –æ—Ç –≤–Ω–µ–¥—Ä–µ–Ω–∏—è –ø—Ä–æ–µ–∫—Ç–∞ –≤ –∏–Ω—Ç–µ—Ä–µ—Å–∞—Ö ...",
        "options": ["–ü–æ–∫–∞–∑–∞—Ç–µ–ª—å –≤ —è–≤–Ω–æ–º –≤–∏–¥–µ –Ω–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω, –ª–∏–±–æ –Ω–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω", 
                    "–ü—Ä–æ–µ–∫—Ç –Ω–µ –∏–º–µ–µ—Ç ... –∑–Ω–∞—á–µ–Ω–∏—è (–æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∞—è —Ü–µ–Ω–Ω–æ—Å—Ç—å, –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –≤ –Ω–∞—Å—Ç–æ—è—â–µ–µ –≤—Ä–µ–º—è –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç)", 
                    "–ü—Ä–æ–µ–∫—Ç –Ω–µ —Ä–µ—à–∞–µ—Ç –∑–∞—è–≤–ª–µ–Ω–Ω—É—é –ø—Ä–æ–±–ª–µ–º—É –∏–ª–∏ —Ä–µ—à–∞–µ—Ç –≤ –Ω–µ–∑–Ω–∞—á–∏—Ç–µ–ª—å–Ω–æ–π —Å—Ç–µ–ø–µ–Ω–∏", 
                    "–ü—Ä–æ–µ–∫—Ç –æ—Ç–≤–µ—á–∞–µ—Ç —Ç–µ–∫—É—â–∏–º –ø–æ—Ç—Ä–µ–±–Ω–æ—Å—Ç—è–º ..., –∏–º–µ–µ—Ç—Å—è –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –≤–Ω–µ–¥—Ä–µ–Ω–∏—è (–ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è) –≤ –æ—Ç–¥–µ–ª—å–Ω—ã—Ö —Å–∏—Å—Ç–µ–º–∞—Ö, –∫–æ–º–ø–ª–µ–∫—Å–∞—Ö, –æ–±—Ä–∞–∑—Ü–∞—Ö –∏ —Ü–µ–ª–µ—Å–æ–æ–±—Ä–∞–∑–µ–Ω –≤ —Ö–æ–¥–µ –æ–±–µ—Å–ø–µ—á–µ–Ω–∏—è –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π ...", 
                    "–ü—Ä–æ–µ–∫—Ç –ø–æ–ª–Ω–æ—Å—Ç—å—é —Ä–µ—à–∞–µ—Ç –∑–∞—è–≤–ª–µ–Ω–Ω—É—é –ø—Ä–æ–±–ª–µ–º—É, –æ—Ç–≤–µ—á–∞–µ—Ç –ø–µ—Ä—Å–ø–µ–∫—Ç–∏–≤–Ω—ã–º –ø–æ—Ç—Ä–µ–±–Ω–æ—Å—Ç—è–º ..., –∏–º–µ–µ—Ç –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –º–µ–∂–≤–∏–¥–æ–≤–æ–≥–æ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è (—Ä–∞–∑–≤–∏—Ç–∏—è —Å–º–µ–∂–Ω—ã—Ö –æ–±–ª–∞—Å—Ç–µ–π)"],
        "slider_ranges": [(0, 0), (1, 5), (6, 10), (11, 15), (16, 20)]
    },
    {
        "question": "–ù–∞—É—á–Ω—ã–π —É—Ä–æ–≤–µ–Ω—å –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã—Ö —Ä–∞–±–æ—Ç –∏ —Å–æ–ø–æ—Å—Ç–∞–≤–ª–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ —Å –∑–∞—Ä—É–±–µ–∂–Ω—ã–º–∏ –∞–Ω–∞–ª–æ–≥–∞–º–∏",
        "options": ["–ü–æ–∫–∞–∑–∞—Ç–µ–ª—å –≤ —è–≤–Ω–æ–º –≤–∏–¥–µ –Ω–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω, –ª–∏–±–æ –Ω–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω", 
                    "–ü—Ä–æ–µ–∫—Ç –Ω–µ –∏–º–µ–µ—Ç –Ω–∞—É—á–Ω–æ–≥–æ –∏–Ω—Ç–µ—Ä–µ—Å–∞ (–ø–æ–≤—Ç–æ—Ä–µ–Ω–∏–µ –∏–∑–≤–µ—Å—Ç–Ω—ã—Ö –ø–æ–¥—Ö–æ–¥–æ–≤), –ª–∏–±–æ —Ä–∞—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –Ω–∞—É—á–Ω–æ–≥–æ –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª–∞", 
                    "–ù–æ–≤–∏–∑–Ω–∞ –∑–∞–∫–ª—é—á–∞–µ—Ç—Å—è –∑–∞ —Å—á–µ—Ç —Ä–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω–µ–Ω–∏—è –∏–∑–≤–µ—Å—Ç–Ω—ã—Ö –ø—Ä–∏–Ω—Ü–∏–ø–æ–≤ –Ω–∞ –Ω–æ–≤—ã–µ –æ–±—ä–µ–∫—Ç—ã", 
                    "–°—Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –ø—Ä–æ–±–ª–µ–º–∞ –∏–º–µ–µ—Ç –Ω–∞—É—á–Ω—ã–π –∏ –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–π –∏–Ω—Ç–µ—Ä–µ—Å. –ù–æ–≤–∏–∑–Ω–∞ –ø—Ä–æ–µ–∫—Ç–∞ –∑–∞–∫–ª—é—á–∞–µ—Ç—Å—è –≤ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–∏ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –∏–∑–≤–µ—Å—Ç–Ω—ã—Ö –ø—Ä–∏–Ω—Ü–∏–ø–æ–≤ –≤ –Ω–æ–≤–æ–º —Å–æ—á–µ—Ç–∞–Ω–∏–∏ –¥–ª—è –ø—Ä–∏–¥–∞–Ω–∏—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö —Å–≤–æ–π—Å—Ç–≤", 
                    "–ü—Ä–æ–µ–∫—Ç –æ—Ç–Ω–æ—Å–∏—Ç—Å—è –∫ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω–æ–π –æ–±–ª–∞—Å—Ç–∏ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–π. –ü—Ä–∏–Ω—Ü–∏–ø–∏–∞–ª—å–Ω–æ –Ω–æ–≤—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã (—É—Å—Ç—Ä–∞–Ω–µ–Ω–∏–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–π –ø—Ä–æ–±–ª–µ–º–∞—Ç–∏–∫–∏): –Ω–æ–≤—ã–µ —Ç–µ–æ—Ä–µ—Ç–∏–∫–æ- —ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–∞–ª—å–Ω—ã–µ –ø–æ–¥—Ö–æ–¥—ã –∫ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—è–º –ò–ò, –Ω–æ–≤—ã–µ –ø—Ä–∏–Ω—Ü–∏–ø—ã –ø–æ—Å—Ç—Ä–æ–µ–Ω–∏—è —Å–∏—Å—Ç–µ–º –ò–ò, –Ω–æ–≤—ã–µ –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–µ –Ω–∞—É—á–Ω–æ-—Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ —Ä–µ—à–µ–Ω–∏—è"],
        "slider_ranges": [(0, 0), (1, 5), (6, 10), (11, 15), (16, 20)]
    },
    {
        "question": "–°–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—á–µ—Å–∫–æ–≥–æ –∏ –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª–∞ –∑–∞—è–≤–ª–µ–Ω–Ω—ã–º —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º –∫ –ø—Ä–æ–µ–∫—Ç—É –ø—Ä–∏ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏ –º–∞—Å—Å–æ–≤–æ–≥–æ –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–∞",
        "options": ["–ü–æ–∫–∞–∑–∞—Ç–µ–ª—å –≤ —è–≤–Ω–æ–º –≤–∏–¥–µ –Ω–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω, –ª–∏–±–æ –Ω–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω", 
                    "–¢—Ä–µ–±—É–µ—Ç—Å—è –∑–∞–º–µ–Ω–∞ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏—Ö —Å—Ä–µ–¥—Å—Ç–≤ –∏ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—á–µ—Å–∫–æ–≥–æ –ø—Ä–æ—Ü–µ—Å—Å–∞ –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–∞ (–æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–µ–Ω–Ω—ã—Ö —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–π, –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –≤ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—á–µ—Å–∫–æ–π –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–µ–Ω–Ω–æ–π —Ü–µ–ø–æ—á–∫–µ –∏–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –∏–∑ ¬´–Ω–µ–¥—Ä—É–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö¬ª —Å—Ç—Ä–∞–Ω, –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—å –æ—Ç –ø–æ—Å—Ç–∞–≤—â–∏–∫–æ–≤ (—Å—É–±–ø–æ–¥—Ä—è–¥—á–∏–∫–æ–≤), –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–µ —Å–∫–ª–∞–¥—Å–∫–∏—Ö —Ä–µ–∑–µ—Ä–≤–æ–≤, –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –ø–æ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏—é –ø–æ–¥–¥–µ—Ä–∂–∫–∏ –∏ –¥—Ä.), –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–µ –æ–ø—ã—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è —É—Å–ø–µ—à–Ω—ã—Ö –ø—Ä–æ–µ–∫—Ç–æ–≤ –≤ —Å—Ñ–µ—Ä–µ –ò–ò", 
                    "–¢—Ä–µ–±—É–µ—Ç—Å—è –Ω–µ–∑–Ω–∞—á–∏—Ç–µ–ª—å–Ω–∞—è –º–æ–¥–µ—Ä–Ω–∏–∑–∞—Ü–∏—è —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏—Ö —Å—Ä–µ–¥—Å—Ç–≤ –ø—Ä–æ—Ü–µ—Å—Å–∞ –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–∞, –ª–∏–±–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç—å —Å–æ–≤–º–µ—Å—Ç–Ω–æ–π —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ —Å –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è–º–∏, –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –Ω–∞–±–æ—Ä–æ–≤ –¥–∞–Ω–Ω—ã—Ö (–∑–Ω–∞–Ω–∏–π, –ø—Ä–∞–≤–∏–ª) –¥–ª—è –æ–±—É—á–µ–Ω–∏—è —Å–∏—Å—Ç–µ–º –ò–ò", 
                    "–¢—Ä–µ–±—É–µ—Ç—Å—è –Ω–µ–∑–Ω–∞—á–∏—Ç–µ–ª—å–Ω–∞—è –º–æ–¥–µ—Ä–Ω–∏–∑–∞—Ü–∏—è —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—á–µ—Å–∫–æ–≥–æ –ø—Ä–æ—Ü–µ—Å—Å–∞ –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–∞ (–Ω–µ–¥–æ—Å—Ç–∞—Ç–æ–∫ –∏–º–µ—é—â–µ–≥–æ—Å—è –≤ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è –¥–ª—è —Ä–∞–±–æ—Ç —Å –ò–ò)", 
                    "–ú–æ–¥–µ—Ä–Ω–∏–∑–∞—Ü–∏—è –¥–ª—è –º–∞—Å—Å–æ–≤–æ–≥–æ –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–∞ –Ω–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è (–ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–µ–Ω–Ω—ã–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏, —Å—Ç–∞–Ω–∫–∏, –æ—Å–Ω–∞—Å—Ç–∫–∞, –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç, –∏–∑–º–µ—Ä–∏—Ç–µ–ª—å–Ω—ã–µ –ø—Ä–∏–±–æ—Ä—ã, —Å—Ä–µ–¥—Å—Ç–≤–∞ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏ –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–∞, –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–µ–Ω–Ω–æ–µ, —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—á–µ—Å–∫–æ–µ –∏ –∏—Å–ø—ã—Ç–∞—Ç–µ–ª—å–Ω–æ–µ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ –ø–æ–∑–≤–æ–ª—è—é—Ç —Å–æ–∑–¥–∞—Ç—å –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–µ–Ω–Ω–æ-—Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–π –∑–∞–¥–µ–ª)"],
        "slider_ranges": [(0, 0), (1, 5), (6, 10), (11, 15), (16, 20)]
    },
    {
        "question": "–£—Ä–æ–≤–µ–Ω—å —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–π –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏ —Å —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—á–µ—Å–∫–æ–π –∑—Ä–µ–ª–æ—Å—Ç—å—é –ø—Ä–æ–≥—Ä–∞–º–º–Ω—ã—Ö –∏ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏—Ö —Å—Ä–µ–¥—Å—Ç–≤ —Å–∏—Å—Ç–µ–º –∏ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–π –ò–ò –∏ –æ–∂–∏–¥–∞–µ–º—ã–µ —Å—Ä–æ–∫–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –ø—Ä–æ–µ–∫—Ç–∞",
        "options": ["–ü–æ–∫–∞–∑–∞—Ç–µ–ª—å –≤ —è–≤–Ω–æ–º –≤–∏–¥–µ –Ω–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω, –ª–∏–±–æ –Ω–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω", 
                    "–°—Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–∞–Ω–∞ —Ñ—É–Ω–¥–∞–º–µ–Ω—Ç–∞–ª—å–Ω–∞—è –∫–æ–Ω—Ü–µ–ø—Ü–∏—è —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏ –∏ –æ–±–æ—Å–Ω–æ–≤–∞–Ω–∞ –ø–æ–ª–µ–∑–Ω–æ—Å—Ç—å —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏. –û–ø—Ä–µ–¥–µ–ª–µ–Ω—ã —Ü–µ–ª–µ–≤—ã–µ –æ–±–ª–∞—Å—Ç–∏ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏ –∏ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω—ã –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ —ç–ª–µ–º–µ–Ω—Ç—ã —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏. –ü–æ–ª—É—á–µ–Ω –º–∞–∫–µ—Ç–Ω—ã–π –æ–±—Ä–∞–∑–µ—Ü —Å –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–µ–π –∫–ª—é—á–µ–≤–æ–≥–æ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–∞. –ü—Ä–æ–µ–∫—Ç –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –ª–∏—Ü–µ–Ω–∑–∏–∏ GNU GPL", 
                    "–ü—Ä–æ–¥–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã –∫–ª—é—á–µ–≤—ã–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ –º–∞–∫–µ—Ç–Ω–æ–≥–æ –æ–±—Ä–∞–∑—Ü–∞. –ü–æ–ª—É—á–µ–Ω –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω—ã–π –æ–±—Ä–∞–∑–µ—Ü –∏ –ø–æ–¥–≥–æ—Ç–æ–≤–ª–µ–Ω –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω—ã–π —Å—Ç–µ–Ω–¥. –ü—Ä–æ–≤–µ–¥–µ–Ω—ã –∏—Å–ø—ã—Ç–∞–Ω–∏—è –±–∞–∑–æ–≤—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π —Å–≤—è–∑–∏ –æ–±—Ä–∞–∑—Ü–∞ —Å –¥—Ä—É–≥–∏–º–∏ —ç–ª–µ–º–µ–Ω—Ç–∞–º–∏ —Å–∏—Å—Ç–µ–º—ã. –ò–∑–≥–æ—Ç–æ–≤–ª–µ–Ω –∏ –∏—Å–ø—ã—Ç–∞–Ω —ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–∞–ª—å–Ω—ã–π –æ–±—Ä–∞–∑–µ—Ü –≤ —Ä–µ–∞–ª—å–Ω–æ–º –º–∞—Å—à—Ç–∞–±–µ –ø–æ –ø–æ–ª—É–ø—Ä–æ–º—ã—à–ª–µ–Ω–Ω–æ–π —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏", 
                    "–ü—Ä–∏ –∏—Å–ø—ã—Ç–∞–Ω–∏—è—Ö –æ–±—Ä–∞–∑—Ü–∞ (—Å—Ç–µ–Ω–¥–∞) –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω—ã –æ—Å–Ω–æ–≤–Ω—ã–µ –≤–Ω–µ—à–Ω–∏–µ —É—Å–ª–æ–≤–∏—è. –ò–∑–≥–æ—Ç–æ–≤–ª–µ–Ω —Ä–µ–ø—Ä–µ–∑–µ–Ω—Ç–∞—Ç–∏–≤–Ω—ã–π –ø–æ–ª–Ω–æ—Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π –æ–±—Ä–∞–∑–µ—Ü –Ω–∞ –ø–∏–ª–æ—Ç–Ω–æ–π –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–µ–Ω–Ω–æ–π –ª–∏–Ω–∏–∏. –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω—ã —Ä–∞–±–æ—á–∏–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ –æ–±—Ä–∞–∑—Ü–∞ –≤ —É—Å–ª–æ–≤–∏—è—Ö, –ø—Ä–∏–±–ª–∏–∂–µ–Ω–Ω—ã—Ö –∫ —Ä–µ–∞–ª—å–Ω–æ—Å—Ç–∏. –ü—Ä–æ–≤–µ–¥–µ–Ω—ã –∏—Å–ø—ã—Ç–∞–Ω–∏—è (–∞–ø—Ä–æ–±–∞—Ü–∏–∏, –≤–æ–µ–Ω–Ω–æ-—Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ —ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç—ã) –æ–ø—ã—Ç–Ω–æ-–ø—Ä–æ–º—ã—à–ª–µ–Ω–Ω–æ–≥–æ –æ–±—Ä–∞–∑—Ü–∞ –≤ —Ä–µ–∞–ª—å–Ω—ã—Ö —É—Å–ª–æ–≤–∏—è—Ö —ç–∫—Å–ø–ª—É–∞—Ç–∞—Ü–∏–∏ —Å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ–º –ø—Ä–æ—Ç–æ–∫–æ–ª–∞–º–∏ –∏—Å–ø—ã—Ç–∞–Ω–∏–π –º–∞–∫–µ—Ç–Ω—ã—Ö –∏ —ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–∞–ª—å–Ω—ã—Ö –æ–±—Ä–∞–∑—Ü–æ–≤ (—Å–æ—Å—Ç–∞–≤–Ω—ã—Ö —á–∞—Å—Ç–µ–π, —É–∑–ª–æ–≤ –∏ –∞–≥—Ä–µ–≥–∞—Ç–æ–≤). –û–∫–æ–Ω—á–∞—Ç–µ–ª—å–Ω–æ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∞ —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç—å –æ–±—Ä–∞–∑—Ü–∞. –ó–∞–ø—É—â–µ–Ω—ã –æ–ø—ã—Ç–Ω–æ-–ø—Ä–æ–º—ã—à–ª–µ–Ω–Ω–æ–µ –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–æ –∏ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è –æ–±—Ä–∞–∑—Ü–∞", 
                    "–ü—Ä–æ–µ–∫—Ç —É–¥–æ–≤–ª–µ—Ç–≤–æ—Ä—è–µ—Ç –≤—Å–µ–º —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º ‚Äî –∏–Ω–∂–µ–Ω–µ—Ä–Ω—ã–º, –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–µ–Ω–Ω—ã–º, —ç–∫—Å–ø–ª—É–∞—Ç–∞—Ü–∏–æ–Ω–Ω—ã–º, –∞ —Ç–∞–∫–∂–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º –∫ –∫–∞—á–µ—Å—Ç–≤—É –∏ –Ω–∞–¥–µ–∂–Ω–æ—Å—Ç–∏, –∏ –≤—ã–ø—É—Å–∫–∞–µ—Ç—Å—è —Å–µ—Ä–∏–π–Ω–æ. –ù–∞–ª–∏—á–∏–µ —É –∑–∞—è–≤–∏—Ç–µ–ª—è –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤, –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞—é—â–∏—Ö –Ω–∞–ª–∏—á–∏–µ –Ω–∞—É—á–Ω–æ-—Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–≥–æ –∑–∞–¥–µ–ª–∞ (–ø—Ä–æ–µ–∫—Ç –∏ (–∏–ª–∏) –µ–≥–æ –æ—Ç–¥–µ–ª—å–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã –∑–∞—â–∏—â–µ–Ω—ã –∞–≤—Ç–æ—Ä—Å–∫–∏–º —Å–≤–∏–¥–µ—Ç–µ–ª—å—Å—Ç–≤–æ–º –∏ (–∏–ª–∏) –∏–º–µ—é—Ç –ø–∞—Ç–µ–Ω—Ç, —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –Ω–∞—É—á–Ω–æ-–∏—Å—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö —Ä–∞–±–æ—Ç, —ç–∫—Å–ø–µ—Ä—Ç–Ω—ã—Ö –∑–∞–∫–ª—é—á–µ–Ω–∏–π –Ω–∞ –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º—ã–π –∫ —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏—é –ø—Ä–æ–µ–∫—Ç, –∞ —Ç–∞–∫–∂–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π –ø–æ –≥–æ—Ç–æ–≤–æ–º—É –ø—Ä–æ–µ–∫—Ç—É, –æ—Ñ–æ—Ä–º–ª–µ–Ω–Ω—ã–π –≤ –≤–∏–¥–µ —Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏—Ö –∫–∞—Ä—Ç–æ—á–µ–∫, —Å–ø—Ä–∞–≤–æ–∫-–æ–±–æ—Å–Ω–æ–≤–∞–Ω–∏–π –∏ —Ç–µ—Ö–Ω–∏–∫–æ-—ç–∫–æ–Ω–æ–º–∏—á–µ—Å–∫–∏—Ö –æ–±–æ—Å–Ω–æ–≤–∞–Ω–∏–π –Ω–∞ –∞–≤–∞–Ω–ø—Ä–æ–µ–∫—Ç—ã (–∏–Ω–∏—Ü–∏–∞—Ç–∏–≤–Ω—ã–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏) –Ω–∞—É—á–Ω–æ-–∏—Å—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ –∏–ª–∏ –æ–ø—ã—Ç–Ω–æ-–∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä—Å–∫–∏–µ —Ä–∞–±–æ—Ç—ã). –ü—Ä–æ–µ–∫—Ç –∏ (–∏–ª–∏) –µ–≥–æ –æ—Ç–¥–µ–ª—å–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤ –∏–Ω—Ç–µ—Ä–µ—Å–∞—Ö –†–æ—Å—Å–∏–π—Å–∫–æ–π –§–µ–¥–µ—Ä–∞—Ü–∏–∏ (–≤ —Ç–æ–º —á–∏—Å–ª–µ –ø–æ –≤–æ–ø—Ä–æ—Å–∞–º, –Ω–µ–ø–æ—Å—Ä–µ–¥—Å—Ç–≤–µ–Ω–Ω–æ —Å–≤—è–∑–∞–Ω–Ω—ã–º —Å –æ–±–µ—Å–ø–µ—á–µ–Ω–∏–µ–º ...) –∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –≤—ã—Å–æ–∫–∏–µ –º–µ—Ç—Ä–∏–∫–∏ –∫–∞—á–µ—Å—Ç–≤–∞"],
        "slider_ranges": [(0, 0), (1, 5), (6, 10), (11, 15), (16, 20)]
    },
    {
        "question": "–¢–µ—Ö–Ω–æ–ª–æ–≥–∏—á–µ—Å–∫–∞—è –æ—Å–Ω–æ–≤–∞ –∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –æ—Ç–µ—á–µ—Å—Ç–≤–µ–Ω–Ω–æ–π —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω–æ- –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–Ω–æ–π –±–∞–∑—ã –ø—Ä–∏ —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏ (–º–æ–¥–µ—Ä–Ω–∏–∑–∞—Ü–∏–∏), —Ç—Ä–∞–Ω—Å—Ñ–µ—Ä–∞ –ø—Ä–æ–µ–∫—Ç–∞",
        "options": ["–ü–æ–∫–∞–∑–∞—Ç–µ–ª—å –≤ —è–≤–Ω–æ–º –≤–∏–¥–µ –Ω–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω, –ª–∏–±–æ –Ω–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω", 
                    "–ü—Ä–æ–µ–∫—Ç (–∏—Å–ø–æ–ª—å–∑—É–µ–º–æ–µ –ü–û) –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–µ–Ω–Ω–æ –∏–Ω–æ—Å—Ç—Ä–∞–Ω–Ω—ã–µ –∫–æ–º–ø–ª–µ–∫—Ç—É—é—â–∏–µ", 
                    "–ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –∏–Ω–æ—Å—Ç—Ä–∞–Ω–Ω–∞—è —ç–ª–µ–º–µ–Ω—Ç–Ω–∞—è –±–∞–∑–∞, —Å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å—é –±—ã—Å—Ç—Ä–æ–π —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏, –∞–¥–∞–ø—Ç–∞—Ü–∏–∏, –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è —Ä–æ—Å—Å–∏–π—Å–∫–∏—Ö –∫–æ–º–ø–ª–µ–∫—Ç—É—é—â–∏—Ö –∏ –ü–û (–º–∏–∫—Ä–æ—Å—Ö–µ–º—ã 2 —É—Ä–æ–≤–Ω—è)", 
                    "–ö–ª—é—á–µ–≤—ã–µ —Å–æ—Å—Ç–∞–≤–ª—è—é—â–∏–µ –ø—Ä–æ–µ–∫—Ç–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω—ã –Ω–∞ —Ä–æ—Å—Å–∏–π—Å–∫–∏—Ö –∫–æ–º–ø–ª–µ–∫—Ç—É—é—â–∏—Ö, —Å –Ω–µ–∫—Ä–∏—Ç–∏—á–Ω—ã–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º —Ç–∏–ø–æ–≤—ã—Ö –∏–Ω–æ—Å—Ç—Ä–∞–Ω–Ω—ã—Ö —Ä–µ—à–µ–Ω–∏–π, –ª–∏–±–æ –¥–æ–ø—É—Å–∫–∞–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —Ä–æ—Å—Å–∏–π—Å–∫–∏—Ö –∞–Ω–∞–ª–æ–≥–æ–≤ –∏–Ω–æ—Å—Ç—Ä–∞–Ω–Ω—ã—Ö —Ä–µ—à–µ–Ω–∏–π (–º–∏–∫—Ä–æ—Å—Ö–µ–º—ã 1 —É—Ä–æ–≤–Ω—è)", 
                    "–ü—Ä–æ–µ–∫—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω –ø–æ–ª–Ω–æ—Å—Ç—å—é –Ω–∞ —Ä–æ—Å—Å–∏–π—Å–∫–∏—Ö –ø—Ä–æ–≥—Ä–∞–º–º–Ω—ã—Ö –∏ –∞–ø–ø–∞—Ä–∞—Ç–Ω—ã—Ö —Ä–µ—à–µ–Ω–∏—è—Ö (–≤–∫–ª—é—á–∞—è IP-–±–ª–æ–∫–∏ –≤ –º–∏–∫—Ä–æ—Å—Ö–µ–º–∞—Ö) –Ω–∞ —Ä–æ—Å—Å–∏–π—Å–∫–∏—Ö –∑–∞–≤–æ–¥–∞—Ö"],
        "slider_ranges": [(0, 0), (1, 5), (6, 10), (11, 15), (16, 20)]
    },
    {
        "question": "–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è (–≤—ã—á–∏—Å–ª–∏—Ç–µ–ª—å–Ω–∞—è) —Å–ª–æ–∂–Ω–æ—Å—Ç—å –∏—Å–ø–æ–ª—å–∑—É–µ–º—ã—Ö –∞–ø–ø–∞—Ä–∞—Ç–Ω—ã—Ö —Ä–µ—à–µ–Ω–∏–π",
        "options": ["–ü–æ–∫–∞–∑–∞—Ç–µ–ª—å –≤ —è–≤–Ω–æ–º –≤–∏–¥–µ –Ω–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω, –ª–∏–±–æ –Ω–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω", 
                    "–ú–∏–∫—Ä–æ–∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä, –æ–¥–Ω–æ–ø–ª–∞—Ç–Ω—ã–π –∫–æ–º–ø—å—é—Ç–µ—Ä: Atmel, Espressif, STMicroelectronics, RaspberryPi –∏ –∞–Ω–∞–ª–æ–≥–∏ (Coral, Khadas Vim3, Rock PI –ó–ê 3568, HaiIo8, MAIX-III), Low End-–ø—Ä–æ—Ü–µ—Å—Å–æ—Ä—ã: Intel NCS2, Atom, Sempron, Pentium N-—Å–µ—Ä–∏–∏ –∏ –¥—Ä.", 
                    "CPU: –ê–∫–≤–∞—Ä–∏—É—Å, –ë–∞–π–∫–∞–ª, –ö–æ–º–¥–∏–≤-64, –ú–æ–¥—É–ª—å, –ú–æ—Ç–∏–≤ –ù–¢, –≠–ª–≤–∏—Å, –≠–ª—å–±—Ä—É—Å, Iva –ù, Nvidia, Syntacore, Huawei Atlas, Google TPU, –ö–∏—Ç–∞–π (ACCEL, Da Vinci, Biren, Cambricon, DeepEdgelOMax, Dragon, Enflame, HanGuang800, Horizon Robotics, Kunlun, XuanTie, Zixiao) –∏ –¥—Ä.", 
                    "CPU: –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—ã x86/32/64/128, –±–∞–∑–æ–≤—ã–µ –ø—Ä–æ—Ü–µ—Å—Å–æ—Ä–Ω—ã–µ –∫–æ–º–ø–ª–µ–∫—Ç—ã –æ–±—â–µ–≥–æ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è —Å —Å–æ–≤–º–µ—â–µ–Ω–∏–µ–º –∞–ø–ø–∞—Ä–∞—Ç–Ω–æ–π –º–Ω–æ–≥–æ–ø–æ—Ç–æ—á–Ω–æ—Å—Ç–∏ –∏ –Ω–∞–±–æ—Ä–∞–º–∏ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–π SSE, AVX –∏ –¥—Ä.", 
                    "–ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–æ–Ω–Ω—ã—Ö –±–∏–±–ª–∏–æ—Ç–µ–∫, GP GPU-–≤–∏–¥–µ–æ—É—Å–∫–æ—Ä–∏—Ç–µ–ª–∏, GPU-—Å–µ—Ä–≤–µ—Ä", 
                    "–í–µ–∫—Ç–æ—Ä–Ω—ã–π (—Ç–µ–Ω–∑–æ—Ä–Ω—ã–π, –Ω–µ–π—Ä–æ) –ø—Ä–æ—Ü–µ—Å—Å–æ—Ä", 
                    "–ú–µ–º—Ä–∏—Å—Ç–∏–≤–Ω—ã–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞ –∏ –∞–Ω–∞–ª–æ–≥–∏ (–¥–ª—è –∫–∞–ø—Å—É–ª—å–Ω—ã—Ö (–∏–º–ø—É–ª—å—Å–Ω—ã—Ö, —Å–ø–∞–π–∫–æ–≤—ã—Ö) –ò–ù–°)", 
                    "–ù–µ–π—Ä–æ–∫–æ–º–ø—å—é—Ç–µ—Ä, –Ω–µ–π—Ä–æ–Ω–Ω—ã–π –∫–≤–∞–Ω—Ç–æ–≤—ã–π –∫–æ–º–ø—å—é—Ç–µ—Ä, InMemory-–≤—ã—á–∏—Å–ª–µ–Ω–∏—è, –æ–ø—Ç–∏—á–µ—Å–∫–∏–µ –∫–æ–º–ø—å—é—Ç–µ—Ä–Ω—ã–µ –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—ã, —Ç–µ–Ω–∑–æ—Ä–Ω—ã–µ –ø–æ–µ–∑–¥–∞, —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–µ SWARM-–≤—ã—á–∏—Å–ª–µ–Ω–∏—è –Ω–∞ —Å–µ—Ç–∏ –º–∞–ª—ã—Ö EDGE —É—Å—Ç—Ä–æ–π—Å—Ç–≤", 
                    "–ê–ø–ø–∞—Ä–∞—Ç–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ —á–∞—Å—Ç–∏ –Ω–µ–π—Ä–æ–Ω–Ω–æ–π —Å–µ—Ç–∏ (–ø—Ä–∏–º–µ—Ä: –Ω–µ–π—Ä–æ–Ω–æ–≤, –≤–µ—Å–æ–≤, —Å–≤—ë—Ä—Ç–æ—á–Ω—ã—Ö —Ñ–∏–ª—å—Ç—Ä–æ–≤, –∞–ø–ø–∞—Ä–∞—Ç–Ω–∞—è —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è –ø–æ–ª–Ω–æ–π —Ç–æ–ø–æ–ª–æ–≥–∏–∏ –∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω–æ–π –Ω–µ–π—Ä–æ–Ω–Ω–æ–π —Å–µ—Ç–∏)", 
                    "–ò–Ω–æ–µ (–ø—Ä–∏–º–µ—Ä: –±–∏–æ–ª–æ–≥–∏—á–µ—Å–∫–æ–µ, —Ö–∏–º–∏—á–µ—Å–∫–æ–µ, –ø—Ä–æ—Ç–æ–Ω–Ω—ã–µ –∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω—ã–µ —Å–∏–Ω–∞–ø—Å—ã, –æ–ø—Ç–∏—á–µ—Å–∫–∞—è, –∫–≤–∞–Ω—Ç–æ–≤–∞—è –ò–ù–°, —Ñ–∏–∑–∏—á–µ—Å–∫–æ–µ —Ä–µ—à–µ–Ω–∏–µ –Ω–∞ —Ñ–∞–∑–æ–≤—ã—Ö –ø–µ—Ä–µ—Ö–æ–¥–∞—Ö –∏ –¥—Ä.)"],
        "slider_ranges": [(0, 0), (1, 2), (3, 4), (5, 6), (7, 10), (11, 12), (13, 13), (14, 16), (17, 19), (20, 20)]
    },
    {
        "question": "–ü—Ä–æ–≥—Ä–∞–º–º–Ω–æ–µ –∏—Å–ø–æ–ª–Ω–µ–Ω–∏–µ, —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è",
        "options": ["–ü–æ–∫–∞–∑–∞—Ç–µ–ª—å –≤ —è–≤–Ω–æ–º –≤–∏–¥–µ –Ω–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω, –ª–∏–±–æ –Ω–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω", 
                    "Clojure, Go, Java, Kotlin, Lua, MathLab, .Net, Node, Octave, Python, R, Scala –∏ –¥—Ä.", 
                    "–§—Ä—ç–π–º–≤–æ—Ä–∫–∏ ML, –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏ —Ü–∏–∫–ª–∞ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ –ò–ò, –æ—Ä–∫–µ—Å—Ç—Ä–∞—Ç–æ—Ä—ã —É—Ç–∏–ª–∏—Ç, –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –º–æ–¥–µ–ª–µ–π –∏ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ –≥–∏–ø–µ—Ä–ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤, –≤–µ—Ä—Å–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è, –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏–∏ –∏ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞", 
                    "–¢—Ä–∞–¥–∏—Ü–∏–æ–Ω–Ω—ã–µ –∏ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–µ", 
                    "–ù–∞—Ç–∏–≤–Ω—ã–µ (–ø—Ä–æ—Ü–µ–¥—É—Ä–Ω—ã–µ) —è–∑—ã–∫–∏ (–°, –°++ –∏ –¥—Ä.)", 
                    "AutoML (–∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –ø–æ—Å—Ç—Ä–æ–µ–Ω–∏–µ –∏ –æ–±—É—á–µ–Ω–∏–µ –º–æ–¥–µ–ª–µ–π), PuzzleLib, PlatLib, MLJET, LightAutoML, Fedot, –ü–ª–∞—Ç—Ñ–æ—Ä–º–∞-–ì–ù–° –∏ –¥—Ä—É–≥–∏–µ –†–æ—Å—Å–∏–π—Å–∫–∏–µ —Ñ—Ä–µ–π–º–≤–æ—Ä–∫–∏", 
                    "–û–±—ä–µ–∫—Ç–Ω–æ-–æ—Ä–∏–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ: —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –º–∞—à–∏–Ω–Ω—ã–µ –∫–æ–¥—ã (–∞—Å—Å–µ–º–±–ª–µ—Ä), —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–π —è–∑—ã–∫ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è –¥–ª—è –º–∞—à–∏–Ω–Ω–æ–≥–æ –æ–±—É—á–µ–Ω–∏—è —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–≥–æ –º–∞—à–∏–Ω–Ω–æ–≥–æ –æ–±—É—á–µ–Ω–∏—è"],
        "slider_ranges": [(0, 0), (1, 5), (6, 10), (11, 12), (13, 15), (16, 17), (18, 20)]
    },
    {
        "question": "–°—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–Ω—ã–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è –∫ —Ç–æ–ø–æ–ª–æ–≥–∏–∏ –∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω—ã—Ö –Ω–µ–π—Ä–æ–Ω–Ω—ã—Ö —Å–µ—Ç–µ–π (–∫–ª–∞—Å—Å–∏—á–µ—Å–∫–∏—Ö –º–µ—Ç–æ–¥–æ–≤)",
        "options": ["–ü–æ–∫–∞–∑–∞—Ç–µ–ª—å –≤ —è–≤–Ω–æ–º –≤–∏–¥–µ –Ω–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω, –ª–∏–±–æ –Ω–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω", 
                    "–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–æ–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—ã —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–π —Å–µ—Ç–∏ (—Ç–æ–ø–æ–ª–æ–≥–∏—è —Å–ª–æ–µ–≤/—Å–≤—è–∑–µ–π)", 
                    "–ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ —Ç–æ–ø–æ–ª–æ–≥–∏–π –∫–ª–∞—Å—Å–∏—á–µ—Å–∫–∏—Ö –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä, —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —Å–µ—Ç–∏, —Ñ—É–Ω–∫—Ü–∏–π, –º–µ—Ç–æ–¥–æ–≤ –∏–ª–∏ –ø–æ–¥—Ö–æ–¥–æ–≤", 
                    "–°–µ—Ç–∏ –ø—Ä—è–º–æ–≥–æ —Ä–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω–µ–Ω–∏—è, –∫–æ–≥–Ω–∏—Ç—Ä–æ–Ω (–Ω–µ–æ–∫–æ–≥–Ω–∏—Ç—Ä–æ–Ω), –ª–∏–Ω–µ–π–Ω—ã–µ –º–æ–¥–µ–ª–∏, –±–∏–Ω–∞—Ä–Ω—ã–µ –≥—Ä–∞—Ñ—ã, –∫–æ–≥–Ω–∏—Ç–∏–≤–Ω—ã–µ –∫–∞—Ä—Ç—ã –∏ –ø—Ä–∞–≤–∏–ª–∞, ER-–¥–∏–∞–≥—Ä–∞–º–º—ã, UML, –ø—Ä–æ–±–∏—Ç-–º–æ–¥–µ–ª–∏, –ø–æ–∏—Å–∫–æ–≤—ã–µ –∞–ª–≥–æ—Ä–∏—Ç–º—ã", 
                    "–°–µ—Ç–∏ –•–æ–ø—Ñ–∏–ª–¥–∞, –ü–µ—Ç—Ä–∏, –ú–∞—Ä–∫–æ–≤—Å–∫–∏–µ (—Å–∫—Ä—ã—Ç—ã–µ) —Ü–µ–ø–∏, –º–∞—à–∏–Ω—ã –ë–æ–ª—å—Ü–º–∞–Ω–∞, —Å–∞–º–æ–æ—Ä–≥–∞–Ω–∏–∑—É—é—â–∏–µ—Å—è –∏ —Ä–∞–¥–∏–∞–ª—å–Ω–æ-–±–∞–∑–∏—Å–Ω—ã–µ —Å–µ—Ç–∏", 
                    "–°–µ—Ç–∏ –Ω–∞ –±–∞–∑–µ –º–µ—Ç–æ–¥–∞ –æ–ø–æ—Ä–Ω—ã—Ö –≤–µ–∫—Ç–æ—Ä–æ–≤, KNN, –ª–∏–Ω–µ–π–Ω—ã–π –¥–∏—Å–∫—Ä–∏–º–∏–Ω–∞—Ü–∏–æ–Ω–Ω—ã–π –∞–Ω–∞–ª–∏–∑, —Ñ–∞–∫—Ç–æ—Ä–∏–∑–∞—Ü–∏–æ–Ω–Ω—ã–µ –º–∞—à–∏–Ω—ã, —É–º–µ–Ω—å—à–µ–Ω–∏–µ —Ä–∞–∑–º–µ—Ä–Ω–æ—Å—Ç–∏ (–æ–±–æ–±—â–µ–Ω–∏–µ)", 
                    "–ê–≤—Ç–æ—ç–Ω–∫–æ–¥–µ—Ä—ã, –≥–ª—É–±–æ–∫–∏–µ —Å–µ—Ç–∏ –¥–æ–≤–µ—Ä–∏—è, Highway Networks, –Ω–µ—á–µ—Ç–∫–∏–µ —Å–µ—Ç–∏", 
                    "–°–≤—ë—Ä—Ç–æ—á–Ω—ã–µ —Å–µ—Ç–∏ –∏ –∫–æ–º–±–∏–Ω–∞—Ü–∏–∏ –∏—Ö –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä", 
                    "–†–µ–∫—É—Ä—Ä–µ–Ω—Ç–Ω—ã–µ —Å–µ—Ç–∏, —Å–µ—Ç—å –•—ç–º–º–∏–Ω–≥–∞, –°–∏–∞–º—Å–∫–∏–µ —Å–µ—Ç–∏", 
                    "–°–µ—Ç–∏ –∞–¥–∞–ø—Ç–∏–≤–Ω–æ–≥–æ —Ä–µ–∑–æ–Ω–∞–Ω—Å–∞, –∞—Å—Å–æ—Ü–∏–∞—Ç–∏–≤–Ω—ã–µ —Å–µ—Ç–∏ –∏ —Å–µ—Ç–∏ —Å –¥–æ–ª–≥–æ—Å—Ä–æ—á–Ω–æ–π, –∫—Ä–∞—Ç–∫–æ—Å—Ä–æ—á–Ω–æ–π –ø–∞–º—è—Ç—å—é, GRU", 
                    "–ì–µ–Ω–µ—Ä–∞—Ç–∏–≤–Ω—ã–µ (–≥–ª—É–±–æ–∫–∏–µ, –¥–∏—Ñ—Ñ—É–∑–Ω—ã–µ, —Å–æ—Å—Ç—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ, –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç–Ω—ã–µ) —Å–µ—Ç–∏, –¥–µ—Ä–µ–≤—å—è —ç–µ—à–µ–Ω–∏–π, –±—ç–≥–≥–∏–Ω–≥, —Å–ª—É—á–∞–π–Ω—ã–π –ª–µ—Å, —Å—Ç–æ—Ö–∞—Å—Ç–∏—á–µ—Å–∫–∏–π –≥—Ä–∞–¥–∏–µ–Ω—Ç–Ω—ã–π —Å–ø—É—Å–∫, –Ω–∞–∏–≤–Ω—ã–π –±–∞–π–µ—Å–æ–≤—Å–∫–∏–π –∫–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ç–æ—Ä", 
                    "–≠–≤–æ–ª—é—Ü–∏–æ–Ω–Ω—ã–µ, –≥–µ–Ω–µ—Ç–∏—á–µ—Å–∫–∏–µ –∞–ª–≥–æ—Ä–∏—Ç–º—ã, —Å–∞–º–æ–æ—Ä–≥–∞–Ω–∏–∑—É—é—â–∏–µ—Å—è —Å–∏—Å—Ç–µ–º—ã, –æ–±—É—á–µ–Ω–∏–µ —Å –ø–æ–¥–∫—Ä–µ–ø–ª–µ–Ω–∏–µ–º, –∂–∏–¥–∫–∏–µ, Extreme Learning Machine, —ç—Ö–æ-—Å–µ—Ç–∏, Deep Residual Network, Differentiable Neural Compute, Neural Tuning Machine, –∫–∞–ø—Å—É–ª—å–Ω—ã–µ –∏ –¥—Ä—É–≥–∏–µ –¥–µ—Ç–µ–∫—Ç–æ—Ä–Ω—ã–µ —Å–µ—Ç–∏", 
                    "–°–µ—Ç–∏-—Ç—Ä–∞–Ω—Å—Ñ–æ—Ä–º–µ—Ä—ã (—Ä–µ—Ñ–æ—Ä–º–µ—Ä—ã), –≥—Ä–∞—Ñ–æ–≤—ã–µ –Ω–µ–π—Ä–æ–Ω–Ω—ã–µ —Å–µ—Ç–∏, —Å–µ—Ç–∏ –≤–Ω–∏–º–∞–Ω–∏—è –∏ –æ—Å—Ç–∞—Ç–æ—á–Ω—ã–µ —Å–µ—Ç–∏, –≥–∏–±—Ä–∏–¥–Ω—ã–µ, –∫–æ–ª–ª–µ–∫—Ç–∏–≤–Ω—ã–µ, —ç–∫—Å–ø–µ—Ä—Ç–Ω—ã–µ (—Ñ—É–Ω–¥–∞–º–µ–Ω—Ç–∞–ª—å–Ω—ã–µ, –º—É–ª—å—Ç–∏–º–æ–¥–∞–ª—å–Ω—ã–µ) –º–æ–¥–µ–ª–∏ –∏ –¥—Ä.", 
                    "–ò–Ω–∞—è –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞: –∞–Ω—Å–∞–º–±–ª–∏ –º–æ–¥–µ–ª–µ–π, –∫–æ–Ω–∫—É—Ä–∏—Ä—É—é—â–∏–µ –º–æ–¥–µ–ª–∏ –∏ –∞–≥–µ–Ω—Ç—ã –≤ open-ended environment, –ø—Ä–æ–≤–∞–π–¥–µ—Ä—ã –º–æ–¥–µ–ª–µ–π, —Å–æ–∑–¥–∞–Ω–∏–µ —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã—Ö –º–æ–¥–µ–ª–µ–π –∏ —Ñ—Ä—ç–π–º–≤–æ—Ä–∫–æ–≤ ML, –æ—Ç—Ä–∞—Å–ª–µ–≤—ã—Ö —Ä–µ—à–µ–Ω–∏–π (–ø—Ä–æ–≥—Ä–∞–º–º–Ω—ã—Ö –∫–æ–º–ø–ª–µ–∫—Å–æ–≤)"],
        "slider_ranges": [(0, 0), (1, 2), (3, 4), (5, 5), (6, 6), (7, 8), (9, 9), (10, 10), (11, 11), (12, 12), (13, 14), (15, 16), (17, 18), (19, 20)]
    },
    {
        "question": "–û–±–ª–∞—Å—Ç—å —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–π –∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç–∞",
        "options": ["–ü–æ–∫–∞–∑–∞—Ç–µ–ª—å –≤ —è–≤–Ω–æ–º –≤–∏–¥–µ –Ω–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω, –ª–∏–±–æ –Ω–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω", 
                    "–†–µ–∞–ª–∏–∑–∞—Ü–∏—è –∑–∞–¥–∞—á –≤ –æ–±–ª–∞—Å—Ç–∏ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–≥–æ –∑—Ä–µ–Ω–∏—è, –∞–Ω–∞–ª–∏–∑–∞ –∏ —Å–∏–Ω—Ç–µ–∑–∞ –¥–∞–Ω–Ω—ã—Ö —Å–µ–Ω—Å–æ—Ä–Ω–æ‚Äî—ç—Ñ—Ñ–µ–∫—Ç–æ—Ä–Ω—ã—Ö —Å–∏—Å—Ç–µ–º", 
                    "–†–µ–∞–ª–∏–∑–∞—Ü–∏—è –∑–∞–¥–∞—á –≤ –æ–±–ª–∞—Å—Ç–∏ —Å–æ—Ü–∏–∞–ª—å–Ω—ã—Ö –∫–æ–º–º—É–Ω–∏–∫–∞—Ü–∏–π, –∫–∞–¥—Ä–æ–≤–æ–≥–æ –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª–∞ –∏ –≤ —Å–∏—Å—Ç–µ–º–∞—Ö –æ–±—Ä–∞–±–æ—Ç–∫–∏ –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ —è–∑—ã–∫–∞ (Conversational NLU, NLP)", 
                    "–†–µ–∞–ª–∏–∑–∞—Ü–∏—è –∑–∞–¥–∞—á –≤ –æ–±–ª–∞—Å—Ç–∏ –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç—É–∞–ª—å–Ω—ã—Ö —Å–∏—Å—Ç–µ–º —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è, –ø—Ä–æ–≥–Ω–æ–∑–∏—Ä–æ–≤–∞–Ω–∏—è –∏ –ø–æ–¥–¥–µ—Ä–∂–∫–∏ –ø—Ä–∏–Ω—è—Ç–∏—è —Ä–µ—à–µ–Ω–∏–π, –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–æ-–∞–Ω–∞–ª–∏—Ç–∏—á–µ—Å–∫–æ–≥–æ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è –∏ –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–æ–≥–æ –º–∞–Ω–∏–ø—É–ª–∏—Ä–æ–≤–∞–Ω–∏—è", 
                    "–†–µ–∞–ª–∏–∑–∞—Ü–∏—è –∑–∞–¥–∞—á –≤ –æ–±–ª–∞—Å—Ç–∏ –¥–æ–≤–µ—Ä–µ–Ω–Ω—ã—Ö —Å–∏—Å—Ç–µ–º –∏ –æ–±–µ—Å–ø–µ—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–æ–π –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—è–º–∏ –∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç–∞", 
                    "–†–µ–∞–ª–∏–∑–∞—Ü–∏—è –∑–∞–¥–∞—á –≤ –æ–±–ª–∞—Å—Ç–∏ –ø–µ—Ä—Å–ø–µ–∫—Ç–∏–≤–Ω—ã—Ö –º–µ—Ç–æ–¥–æ–≤ –∏ —ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–∞–ª—å–Ω—ã—Ö —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–π –∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç–∞"],
        "slider_ranges": [(0, 0), (1, 20), (1, 20), (1, 20), (1, 20), (1, 20)]
    },
]



# –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ç–µ–∫—É—â–µ–≥–æ –≤–æ–ø—Ä–æ—Å–∞
if st.session_state.current_question < len(questions):
    question_data = questions[st.session_state.current_question]
    display_question_page(question_data["question"], question_data["options"], question_data["slider_ranges"])

    #st.write("–í—Å–µ –≤–æ–ø—Ä–æ—Å—ã –±—ã–ª–∏ –æ—Ç–≤–µ—á–µ–Ω—ã.")

if st.session_state.current_question >= len(questions):
    #st.write("–í—Å–µ –≤–æ–ø—Ä–æ—Å—ã –±—ã–ª–∏ –æ—Ç–≤–µ—á–µ–Ω—ã.")
    # –°–æ–∑–¥–∞–µ–º DataFrame –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ —Ç–∞–±–ª–∏—Ü–µ
    
    df = pd.DataFrame(st.session_state.answers)
    #st.write(df)
    
    #print(df['slider_value'].values)
    llist = df.iloc[0:9, 2]
    llist0 = df.iloc[0:9, 0]
    llist1 = df.iloc[0:9, 1]
    
    st.header("–°—É–º–º–∞—Ä–Ω—ã–µ –ø–æ–∫–∞–∑–∞—Ç–µ–ª–∏ –ø—Ä–æ–µ–∫—Ç–∞")
    
    c = (
        Line()
        .set_global_opts(title_opts=opts.TitleOpts(title=""))
        .add_xaxis(["1", "2", "3", "4", "5", "6", "7", "8", "9"])
        .add_yaxis("–ü—Ä–æ–µ–∫—Ç", llist)
        )
    st_pyecharts(c)

    
    dddd = llist.to_numpy()

   
    st.header("–ì—Ä–∞—Ñ –ø—Ä–æ–µ–∫—Ç–∞")
    mn = 70
    nodes = [
    {"name": "–í–∞–∂–Ω–æ—Å—Ç—å", "symbolSize": int(dddd[0]/20*mn)},
    {"name": "–ù–∞—É—á–Ω—ã–π –∑–∞–¥–µ–ª", "symbolSize": int(dddd[1]/20*mn)},
    {"name": "–ü–¢–ó", "symbolSize": int(dddd[2]/20*mn)},
    {"name": "–£–¢–ì", "symbolSize": int(dddd[3]/20*mn)},
    {"name": "–ò–º–ø–æ—Ä—Ç–æ–∑–∞–º–µ—â–µ–Ω–∏–µ", "symbolSize": int(dddd[4]/20*mn)},
    {"name": "–ê–ø–ø—Ä–∞—Ä–∞—Ç–Ω–∞—è —á–∞—Å—Ç—å", "symbolSize": int(dddd[5]/20*mn)},
    {"name": "–ü—Ä–æ–≥—Ä–∞–º–º–Ω–æ–µ –∏—Å–ø–æ–ª–Ω–µ–Ω–∏–µ", "symbolSize": int(dddd[6]/20*mn)},
    {"name": "–ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞", "symbolSize": int(dddd[7]/20*mn)},
    {"name": "–¢–µ—Ö–Ω–æ–ª–æ–≥–∏—è –ò–ò", "symbolSize": int(dddd[8]/20*mn)},
    ]
    links = []
    for i in nodes:
        for j in nodes:
            links.append({"source": i.get("name"), "target": j.get("name")})
    c = (
        Graph()
        .add("", nodes, links, repulsion=9000)
    .   set_global_opts(title_opts=opts.TitleOpts(title=""))
    )
    st_pyecharts(c)


    options = {
        "xAxis": {
            "type": "category",
            "boundaryGap": False,
            "data": ["1", "2", "3", "7", "5", "6", "7", "8", "9"],
        },
        "yAxis": {"type": "value"},
        "series": [
            {
                "data": [int(dddd[0]), int(dddd[1]), int(dddd[2]), int(dddd[3]), int(dddd[4]), int(dddd[5]), int(dddd[6]), int(dddd[7]), int(dddd[8])],
                "type": "line",
                "areaStyle": {},
            }
        ],
    }

    st.header("–û—Ü–µ–Ω–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞:")
   

    options = {
        "title": {"text": ""},
        "tooltip": {
            "trigger": "axis",
            "axisPointer": {"type": "cross", "label": {"backgroundColor": "#6a7985"}},
        },
        "legend": {"data": ["–ü—Ä–æ–µ–∫—Ç", "–î–∏–ø–ª–æ–º", "–°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç"]},
        "toolbox": {"feature": {"saveAsImage": {}}},
        "grid": {"left": "3%", "right": "4%", "bottom": "3%", "containLabel": True},
        "xAxis": [
            {
                "type": "category",
                "boundaryGap": False,
                "data": ["1", "2", "3", "7", "5", "6", "7", "8", "9"],
            }
        ],
        "yAxis": [{"type": "value"}],
        "series": [
            {
                "name": "–°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç",
                "type": "line",
                "stack": "–°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç",
                "areaStyle": {},
                "emphasis": {"focus": "series"},
                "data": [10, 10, 10, 10, 10, 10, 10, 10, 10],
            },
            
            {
                "name": "–î–∏–ø–ª–æ–º",
                "type": "line",
                "stack": "–î–∏–ø–ª–æ–º",
                "areaStyle": {},
                "emphasis": {"focus": "series"},
                "data": [5, 5, 5, 5, 5, 5, 5, 5, 5],
            },
            {
                "name": "–ü—Ä–æ–µ–∫—Ç",
                "type": "line",
                "stack": "–ü—Ä–æ–µ–∫—Ç",
                "areaStyle": {},
                "emphasis": {"focus": "series"},
                "data": [int(dddd[0]), int(dddd[1]), int(dddd[2]), int(dddd[3]), int(dddd[4]), int(dddd[5]), int(dddd[6]), int(dddd[7]), int(dddd[8])],
            },
        ],
    }



    st_echarts(options=options, height="400px")

    st.header("–û—Ü–µ–Ω–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞:")
   
    option = {
        "title": {"text": ""},
        "legend": {"data": ["–ü—Ä–æ–µ–∫—Ç", "–î–∏–ø–ª–æ–º"]},
        "radar": {
            "indicator": [
                {"name": "–í–∞–∂–Ω–æ—Å—Ç—å", "max": 20},
                {"name": "–ù–∞—É—á–Ω—ã–π –∑–∞–¥–µ–ª", "max": 20},
                {"name": "–ü–¢–ó", "max": 20},
                {"name": "–£–¢–ì", "max": 20},
                {"name": "–ò–º–ø–æ—Ä—Ç–æ–∑–∞–º–µ—â–µ–Ω–∏–µ", "max": 20},
                {"name": "–ê–ø–ø—Ä–∞—Ä–∞—Ç–Ω–∞—è —á–∞—Å—Ç—å", "max": 20},
                {"name": "–ü—Ä–æ–≥—Ä–∞–º–º–Ω–æ–µ –∏—Å–ø–æ–ª–Ω–µ–Ω–∏–µ", "max": 20},
                {"name": "–ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞", "max": 20},
                {"name": "–¢–µ—Ö–Ω–æ–ª–æ–≥–∏—è –ò–ò", "max": 20},
            ]
        },
        "series": [
            {
                "name": "–°—Ä–∞–≤–Ω–µ–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–æ–≤",
                "type": "radar",
                "data": [
                    {
                        "value": [int(dddd[0]), int(dddd[1]), int(dddd[2]), int(dddd[3]), int(dddd[4]), int(dddd[5]), int(dddd[6]), int(dddd[7]), int(dddd[8])],
                        "name": "–ü—Ä–æ–µ–∫—Ç",
                    },
                    {
                        "value": [5, 5, 5, 5, 5, 5, 5, 5, 5],
                        "name": "–î–∏–ø–ª–æ–º",
                    },
                ],
            }
        ],
    }
    st_echarts(option, height="400px")

    st.header("–¢–∞–±–ª–∏—Ü–∞ –æ—Ç–≤–µ—Ç–æ–≤:")
    

    data = [
    [dddd[0], dddd[3], dddd[6]],
    [dddd[1], dddd[4], dddd[7]],
    [dddd[2], dddd[5], dddd[8]]
    ]

    # –í—ã—á–∏—Å–ª—è–µ–º —Å—É–º–º—É –≤—Å–µ—Ö –∑–Ω–∞—á–µ–Ω–∏–π –≤ –º–∞—Å—Å–∏–≤–µ
    total_sum = sum(int(cell) for row in data for cell in row)
    # –í—ã—á–∏—Å–ª—è–µ–º –ø—Ä–æ—Ü–µ–Ω—Ç–Ω–æ–µ –æ—Ç–Ω–æ—à–µ–Ω–∏–µ —Å—É–º–º—ã –∫ —á–∏—Å–ª—É 180
    percentage = (total_sum / 180) * 100
    # –°–æ–∑–¥–∞–µ–º HTML-—Ç–∞–±–ª–∏—Ü—É –±–µ–∑ –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤
    html_table = "<table>"
    for row in data:
        html_table += "<tr>"
        for cell in row:
            html_table += f"<td>{cell}</td>"
        html_table += "</tr>"
    html_table += "</table>"

    # –î–æ–±–∞–≤–ª—è–µ–º —Å—É–º–º—É –≤ —Ç–∞–±–ª–∏—Ü—É
    html_table += f"<p>–°—É–º–º–∞ –≤—Å–µ—Ö –∑–Ω–∞—á–µ–Ω–∏–π: {total_sum} –±–∞–ª–ª–∞(–æ–≤) ({(percentage):.2f}%)</p>"

    # –í—ã–≤–æ–¥–∏–º HTML-—Ç–∞–±–ª–∏—Ü—É
    st.markdown(html_table, unsafe_allow_html=True)

    # –°–æ–∑–¥–∞–µ–º DataFrame –∏–∑ –¥–∞–Ω–Ω—ã—Ö
    df = pd.DataFrame(data, columns=["–°—Ç–æ–ª–±–µ—Ü 1", "–°—Ç–æ–ª–±–µ—Ü 2", "–°—Ç–æ–ª–±–µ—Ü 3"])

    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ CSV-—Ñ–∞–π–ª–∞
    # csv = df.to_csv(index=False)
    # st.download_button(
    #     label="–°–∫–∞—á–∞—Ç—å –¥–∞–Ω–Ω—ã–µ –≤ CSV",
    #     data=csv,
    #     file_name='data.csv',
    #     mime='text/csv',
    # )